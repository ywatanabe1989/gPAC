
########################################
## mngs v1.11.0
## 2025Y-06M-05D-14h37m43s_MAWH (PID: 93531)
########################################


========================================
./examples/performance/multiple_gpus/comodulogram.py
Namespace(batch_size=4, pha_bands=20, amp_bands=15, n_perm=0)
========================================

ðŸ”§ GPU Count: 1
ðŸ”§ GPU Memory: 79.1 GB per GPU
ðŸ”§ Total VRAM: 79.1 GB

==> Test Configuration:
   Batch size: 4
   Channels: 16
   Sequence length: 4096 (8.0s)
   Phase bands: 20
   Amplitude bands: 15
   Permutations: 0

============================================================
ðŸš€ Comodulogram Consistency Test
ðŸ“‹ Comparing single vs multi-GPU PAC results
============================================================

==> Generating test data...
Data shape: torch.Size([4, 16, 4096])

==> Creating PAC models...

==>  Computing PAC with single GPU...
Single GPU PAC shape: (20, 15)
Single GPU PAC range: [0.000624, 0.015734]

==>  Computing PAC with 1 GPUs...
Multi-GPU PAC shape: (20, 15)
Multi-GPU PAC range: [0.000624, 0.015734]

==> Creating comparison visualization...

==> Consistency Metrics:
   Correlation: 1.000000
   Maximum difference: 0.000000
   Mean absolute difference: 0.000000
    Excellent consistency between single and multi-GPU

Saved to: /data/gpfs/projects/punim2354/ywatanabe/gPAC/examples/performance/multiple_gpus/comodulogram_out/comodulogram_comparison.csv (14.3 KiB)

Saved to: /data/gpfs/projects/punim2354/ywatanabe/gPAC/examples/performance/multiple_gpus/comodulogram_out/comodulogram_comparison_for_sigmaplot.csv (18.3 KiB)

Saved to: /data/gpfs/projects/punim2354/ywatanabe/gPAC/examples/performance/multiple_gpus/comodulogram_out/comodulogram_comparison.gif (160.4 KiB)

Saved to: /data/gpfs/projects/punim2354/ywatanabe/gPAC/examples/performance/multiple_gpus/comodulogram_out/comodulogram_results.yaml (300.0 B)
