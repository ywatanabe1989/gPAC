[94m
########################################
## mngs v1.11.0
## 2025Y-06M-05D-16h51m58s_wiFt (PID: 97476)
########################################
[0m
[93m
========================================
/data/gpfs/projects/punim2354/ywatanabe/gPAC/examples/performance/parameter_sweep/parameter_sweep_benchmark.py
Namespace(device='auto', n_repeats=3, no_quick=False, quick=True)
========================================
[0m

============================================================
gPAC Parameter Sweep Benchmark
============================================================
Running parameter sweep on device: cuda
============================================================

Varying parameter: batch_size
----------------------------------------
  batch_size = 1... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.0530s, Speedup: nanx
  batch_size = 4... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.1541s, Speedup: nanx
  batch_size = 16... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.5924s, Speedup: nanx

Varying parameter: n_channels
----------------------------------------
  n_channels = 1... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.0315s, Speedup: nanx
  n_channels = 4... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.0841s, Speedup: nanx
  n_channels = 16... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.2942s, Speedup: nanx

Varying parameter: seq_sec
----------------------------------------
  seq_sec = 1.0... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.0502s, Speedup: nanx
  seq_sec = 4.0... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.1524s, Speedup: nanx

Varying parameter: fs
----------------------------------------
  fs = 250... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.1490s, Speedup: nanx
  fs = 1000... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.8227s, Speedup: nanx

Varying parameter: pha_n_bands
----------------------------------------
  pha_n_bands = 5... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.0951s, Speedup: nanx
  pha_n_bands = 15... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.2088s, Speedup: nanx

Varying parameter: amp_n_bands
----------------------------------------
  amp_n_bands = 5... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.0806s, Speedup: nanx
  amp_n_bands = 15... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.1493s, Speedup: nanx

Varying parameter: n_perm
----------------------------------------
  n_perm = 0... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.1493s, Speedup: nanx
  n_perm = 50... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.1492s, Speedup: nanx
  n_perm = 200... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.1495s, Speedup: nanx

Varying parameter: fp16
----------------------------------------
  fp16 = False... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.1493s, Speedup: nanx
  fp16 = True... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: nans, Speedup: nanx

Varying parameter: multi_gpu
----------------------------------------
  multi_gpu = False... Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

Applying torch.compile for performance optimization...
gPAC error: TODO: add support for ndarray.dtype

from user code:
   File "/home/ywatanabe/proj/gPAC/src/gpac/_PAC.py", line 527, in _compute_pac_core
    x_filtered = self.bandpass(x, edge_len=0)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_BandPassFilter.py", line 194, in forward
    return self.filter(x, edge_len=edge_len)
  File "/home/ywatanabe/proj/gPAC/src/gpac/_Filters/_ScipyFiltFiltFilter.py", line 111, in forward
    output = np.zeros((batch_size, n_channels, self.n_filters, seq_len), dtype=x_np.dtype)

Set TORCH_LOGS="+dynamo" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True

gPAC: nans, TensorPAC: 0.1498s, Speedup: nanx
[93m
Saved to: /data/gpfs/projects/punim2354/ywatanabe/gPAC/examples/performance/parameter_sweep/parameter_sweep_benchmark_out/parameter_sweep_results.yaml (7.0 KiB)[0m
[93m
Saved to: /data/gpfs/projects/punim2354/ywatanabe/gPAC/examples/performance/parameter_sweep/parameter_sweep_benchmark_out/parameter_sweep_results.csv (4.5 KiB)[0m

Creating parameter dependency plots...
