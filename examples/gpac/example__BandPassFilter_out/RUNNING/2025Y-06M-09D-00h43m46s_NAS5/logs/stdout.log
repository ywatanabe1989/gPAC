[94m
########################################
## mngs v1.11.0
## 2025Y-06M-09D-00h43m46s_NAS5 (PID: 37010)
########################################
[0m
[93m
========================================
./examples/gpac/example__BandPassFilter.py
Namespace()
========================================
[0m
[93m
----------------------------------------
=== Demo Static BandPassFilter ===
----------------------------------------
[0m
torch.Size([4, 19, 8, 12, 1024])
[93m
Saved to: /home/ywatanabe/proj/gPAC/examples/gpac/core/example__BandPassFilter_out/02_static_bandpass_filter.csv (159.5 KiB)[0m
[93m
Saved to: /home/ywatanabe/proj/gPAC/examples/gpac/core/example__BandPassFilter_out/02_static_bandpass_filter_for_sigmaplot.csv (159.5 KiB)[0m
[93m
Saved to: /home/ywatanabe/proj/gPAC/examples/gpac/core/example__BandPassFilter_out/02_static_bandpass_filter.gif (999.3 KiB)[0m
Filter info: {'pha_bands_hz': tensor([[ 4.0000,  5.0000],
        [ 4.3267,  7.2112],
        [ 6.2403, 10.4004],
        [ 9.0000, 12.0000]]), 'amp_bands_hz': tensor([[ 30.0000,  33.7500],
        [ 31.1764,  40.0840],
        [ 37.0274,  47.6067],
        [ 43.9765,  56.5412],
        [ 52.2297,  67.1524],
        [ 62.0318,  79.7551],
        [ 73.6735,  94.7230],
        [ 87.5000, 100.0000]]), 'pha_center_freqs': tensor([ 4.0000,  5.7690,  8.3203, 12.0000]), 'amp_center_freqs': tensor([ 30.0000,  35.6302,  42.3170,  50.2588,  59.6910,  70.8934,  84.1982,
        100.0000]), 'fs': 512.0, 'n_cycles': 4, 'n_filters': 12, 'pha_n_bands': 4, 'amp_n_bands': 8, 'filter_length': 513, 'spacing': 'log', 'trainable': False}
Input shape: torch.Size([4, 19, 8, 1024])
Output shape: torch.Size([4, 19, 8, 12, 1024])
[93m
----------------------------------------
=== Demo Trainable BandPassFilter ===
----------------------------------------
[0m
torch.Size([4, 19, 8, 12, 1024])
